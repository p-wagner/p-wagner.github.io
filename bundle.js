(function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports}var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{configurable:false,enumerable:true,get:getter})}};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module["default"]}:function getModuleExports(){return module};__webpack_require__.d(getter,"a",getter);return getter};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)};__webpack_require__.p="";return __webpack_require__(__webpack_require__.s=0)})([function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:true});var __WEBPACK_IMPORTED_MODULE_0__GameInfoComponent__=__webpack_require__(11);var __WEBPACK_IMPORTED_MODULE_1__InfoAreaTowerMenuComponent__=__webpack_require__(16);var __WEBPACK_IMPORTED_MODULE_2__InfoAreaBuildComponent__=__webpack_require__(19);var __WEBPACK_IMPORTED_MODULE_3__PathFinder__=__webpack_require__(8);var __WEBPACK_IMPORTED_MODULE_4__EndTile__=__webpack_require__(26);var __WEBPACK_IMPORTED_MODULE_5__Statics__=__webpack_require__(1);var __WEBPACK_IMPORTED_MODULE_6__Tile__=__webpack_require__(10);var __WEBPACK_IMPORTED_MODULE_7__EnemyWaveGenerator__=__webpack_require__(7);var __WEBPACK_IMPORTED_MODULE_8__helper__=__webpack_require__(2);let instance=null;class Game{constructor(){console.log("Game Constructor");if(instance){return instance}instance=this;this.gameState="NOT STARTED";this.canvas=document.getElementById("gameCanvas");this.canvas.width=__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].gameWidth;this.canvas.height=__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].gameHeight;this.context=this.canvas.getContext("2d");this.towerMenu=[];this.infoAreaComponents=[];this.gameInfo;this.money=100;this.lastFrameTimeMs=0;this.maxFPS=60;this.timestep=1e3/60;this.speedMultiplier=1;this.tiles=[];this.openList=[];this.closedList=[];this.endTile=new __WEBPACK_IMPORTED_MODULE_4__EndTile__["a"](__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].endX*__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tileSize,__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].endY*__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tileSize,__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tileSize,__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tileSize);this.enemies=[];this.entities=[];this.towerSelectionChangedCallbacks=[];this.path=null;document.addEventListener("DOMContentLoaded",function(){game.start()});return instance}update(timestamp){var delta=timestamp-game.lastFrameTimeMs;delta+=timestamp-game.lastFrameTimeMs;delta*=game.speedMultiplier;game.lastFrameTimeMs=timestamp;while(delta>=game.timestep){game.updateGameArea(game.timestep);delta-=game.timestep}game.context.clearRect(0,0,game.canvas.width,game.canvas.height);game.draw(game.context);requestAnimationFrame(game.update)}mouseCaptureSetup(){if(document.defaultView&&document.defaultView.getComputedStyle){this.stylePaddingLeft=parseInt(document.defaultView.getComputedStyle(this.canvas,null)["paddingLeft"],10)||0;this.stylePaddingTop=parseInt(document.defaultView.getComputedStyle(this.canvas,null)["paddingTop"],10)||0;this.styleBorderLeft=parseInt(document.defaultView.getComputedStyle(this.canvas,null)["borderLeftWidth"],10)||0;this.styleBorderTop=parseInt(document.defaultView.getComputedStyle(this.canvas,null)["borderTopWidth"],10)||0}var html=document.body.parentNode;this.htmlTop=html.offsetTop;this.htmlLeft=html.offsetLeft;this.canvas.addEventListener("selectstart",function(e){e.preventDefault();return false},false)}start(){console.log(this.gameState);console.trace();if(this.gameState!="NOT STARTED"){console.log("starting again");return}console.log("starting");this.gameState="RUNNING";this.mouseCaptureSetup();this.loadTiles();this.gameInfo=new __WEBPACK_IMPORTED_MODULE_0__GameInfoComponent__["a"];this.infoAreaComponents.push(new __WEBPACK_IMPORTED_MODULE_1__InfoAreaTowerMenuComponent__["a"]);this.infoAreaComponents.push(new __WEBPACK_IMPORTED_MODULE_2__InfoAreaBuildComponent__["a"]);this.infoAreaComponents.forEach(function(element){element.init()},this);this.frameNo=0;game.canvas.addEventListener("mousedown",this.handleMouseDown.bind(this),true);requestAnimationFrame(game.update)}addEnemy(enemy){this.enemies.push(enemy)}towerSelectionChanged(){for(var i=0;i<this.towerSelectionChangedCallbacks.length;i++){var callback=this.towerSelectionChangedCallbacks[i];callback()}}registerSelectionChanged(callback){this.towerSelectionChangedCallbacks.push(callback)}handleMouseDown(e){if(this.gameState=="GAMEOVER"){return}var mouse=Object(__WEBPACK_IMPORTED_MODULE_8__helper__["a"])(e);var xPos=Math.floor(mouse.x/__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tileSize);var yPos=Math.floor(mouse.y/__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tileSize);if(mouse.x<=__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tileSize*__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tilesCountWidth&&mouse.y<=__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tileSize*__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tilesCountHeight){if(xPos<__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tilesCountWidth&&yPos<__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tilesCountHeight){if(this.endTile.selected){return}var tile=this.getTileAt(xPos,yPos);if(tile.selected){tile.selected=false}else{tile.selected=true;if(tile==this.endTile||!e.ctrlKey){for(var x=0;x<this.tiles.length;x++){for(var y=0;y<this.tiles[x].length;y++){this.tiles[x][y].selected=false}}tile.selected=true}}}else{for(var i=0;i<this.tiles.length;i++){this.tiles[i].selected=false}}this.towerSelectionChanged()}}getTileAt(x,y){if(x<this.tiles.length){var col=this.tiles[x];if(y<col.length){return col[y]}}return null}loadTiles(){for(var x=0;x<__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tilesCountWidth;x+=1){this.tiles[x]=[];for(var y=0;y<__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tilesCountHeight;y+=1){if(x==this.endTile.coordsX&&y==this.endTile.coordsY){this.tiles[x][y]=this.endTile;continue}this.tiles[x][y]=new __WEBPACK_IMPORTED_MODULE_6__Tile__["a"](x*__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tileSize,y*__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tileSize,__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tileSize,__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tileSize);if((this.debugPathFinding||this.fillWithRandomTowers)&&Math.random(1)>.7){if(x==this.startX&&y==this.startY){continue}if(x==this.endTile.coordsX&&y==this.endTile.coordsY){continue}if(Math.random(1)>1/3){this.tiles[x][y].tower=new BasicTower(x*__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tileSize,y*__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tileSize,__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tileSize,__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tileSize)}else if(Math.random(1)>.5){this.tiles[x][y].tower=new ElectroTower(x*__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tileSize,y*__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tileSize,__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tileSize,__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tileSize)}else{this.tiles[x][y].tower=new MortarTower(x*__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tileSize,y*__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tileSize,__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tileSize,__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tileSize)}}}}this.gameAreaChanged()}draw(ctx){for(var x=0;x<__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tilesCountWidth;x+=1){for(var y=0;y<__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tilesCountHeight;y+=1){this.tiles[x][y].draw(ctx)}}this.endTile.draw(ctx);__WEBPACK_IMPORTED_MODULE_3__PathFinder__["a"].draw(ctx);for(x=0;x<__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tilesCountWidth;x+=1){for(y=0;y<__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tilesCountHeight;y+=1){this.tiles[x][y].drawSelection(ctx)}}this.enemies.forEach(function(element){element.draw(ctx)},this);ctx.fillStyle="#87CEFA";ctx.globalAlpha=.6;ctx.globalAlpha=1;this.entities.forEach(function(element){element.draw(ctx)},this);ctx.fillStyle="#C9C9C9";ctx.fillRect(__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tilesCountWidth*__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tileSize,0,__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].gameWidth-__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tilesCountWidth*__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tileSize,__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tilesCountHeight*__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tileSize);this.gameInfo.draw(ctx);for(var i=0;i<this.infoAreaComponents.length;i++){var infoAreaComponent=this.infoAreaComponents[i];var active=infoAreaComponent.isActive();if(active){infoAreaComponent.draw(ctx);break}}if(this.gameState=="GAMEOVER"){ctx.fillStyle="#111111";ctx.font="bold 60px Arial ";ctx.textAlign="center";ctx.fillText("GAME OVER",__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].gameWidth/2,__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].gameHeight/2)}}updateGameArea(delta){if(this.endTile.isDead()){game.gameState="GAMEOVER"}if(game.gameState=="RUNNING"){for(var i=0;i<this.enemies.length;i++){var element=this.enemies[i];element.update(delta);if(element.isDead()){this.enemies.splice(i,1)}if(element.reachedGoal){this.enemies.splice(i,1)}}for(var x=0;x<__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tilesCountWidth;x+=1){for(var y=0;y<__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tilesCountHeight;y+=1){this.tiles[x][y].update(delta)}}__WEBPACK_IMPORTED_MODULE_7__EnemyWaveGenerator__["a"].update(delta)}for(var i=0;i<this.entities.length;i++){var element=this.entities[i];element.update(delta);if(!element.isActive()){this.entities.splice(i,1)}}for(var i=0;i<game.infoAreaComponents.length;i++){var infoAreaComponent=game.infoAreaComponents[i];if(infoAreaComponent.isActive()){infoAreaComponent.update(delta);break}}}gameAreaChanged(){this.towerSelectionChanged();var startTime=performance.now();__WEBPACK_IMPORTED_MODULE_3__PathFinder__["a"].findPathAsync(__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].startX,__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].startY,this.endTile.coordsX,this.endTile.coordsY,this.tiles,__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tilesCountWidth,__WEBPACK_IMPORTED_MODULE_5__Statics__["a"].tilesCountHeight).then(path=>{var endTime=performance.now();if(path==null){console.log("Found NO Path in "+(endTime-startTime))}else{console.log("Found Path in "+(endTime-startTime));this.path=path}for(var i=0;i<this.enemies.length;i++){var element=this.enemies[i];element.customPath=null}})}setSpeedMultiplier(multiplier){this.speedMultiplier=multiplier}getSpeedMultiplier(){return this.speedMultiplier}}console.log("Game Created");const game=new Game;__webpack_exports__["default"]=game},function(module,__webpack_exports__,__webpack_require__){"use strict";var __WEBPACK_IMPORTED_MODULE_0__enemyAttribute__=__webpack_require__(6);var __WEBPACK_IMPORTED_MODULE_1__towerAttribute__=__webpack_require__(4);let instance=null;class Statics{constructor(){if(instance){return instance}console.log("Created Statics");instance=this;this.gameWidth=480;this.gameHeight=260;this.tilesCountWidth=20;this.tilesCountHeight=13;this.tileSize=20;this.startX=0;this.startY=0;this.endX=this.tilesCountWidth-1;this.endY=this.tilesCountHeight-1;this.infoRegionX=this.tilesCountWidth*this.tileSize;this.infoRegionY=0;this.infoRegionWidth=this.gameWidth-this.infoRegionX;this.stylePaddingLeft=0;this.stylePaddingTop=0;this.styleBorderLeft=0;this.styleBorderTop=0;this.htmlTop=0;this.htmlLeft=0;this.enemyStats={default:{attackDamage:{baseValue:1,multi:.3},attacksPerSecond:{baseValue:.3,multi:0},healthPoints:{baseValue:10,multi:25}},BasicEnemy:{healthPoints:{baseValue:10}},SlowEnemy:{healthPoints:{baseValue:20}},GroupEnemy:{healthPoints:{baseValue:3}},BossEnemy:{healthPoints:{baseValue:80,multi:30}}};this.towerStats={default:{attackDamage:{name:"AD",baseValue:10,multi:5,priceBaseValue:10,priceMulti:5.5},attacksPerSecond:{name:"APS",baseValue:1,multi:.2,priceBaseValue:10,priceMulti:5.5},healthPoints:{name:"HP",baseValue:10,multi:10,priceBaseValue:10,priceMulti:15},attackRange:{name:"AR",baseValue:45,multi:7,priceBaseValue:10,priceMulti:8}},MortarTower:{attackRange:{baseValue:60},healthPoints:{baseValue:200},attackDamage:{baseValue:20},attacksPerSecond:{baseValue:.2},damageArea:{name:"DA",baseValue:25,multi:1.5,priceBaseValue:20,priceMulti:1.5}},ElectroTower:{attackRange:{baseValue:25},attackDamage:{baseValue:8},attacksPerSecond:{name:"APS",baseValue:.5,multi:.08},healthPoints:{baseValue:100}}};this.wavePattern=[{type:1,baseAmount:10,spawnPauseTime:1,waveBreak:2},{type:1,baseAmount:15,spawnPauseTime:1.5,waveBreak:10},{type:2,baseAmount:10,spawnPauseTime:1,waveBreak:5},{type:1,baseAmount:10,spawnPauseTime:1,waveBreak:5},{type:3,baseAmount:10,spawnPauseTime:1,waveBreak:5},{type:4,baseAmount:10,spawnPauseTime:1,waveBreak:5},{type:1,baseAmount:10,spawnPauseTime:1,waveBreak:5},{type:2,baseAmount:10,spawnPauseTime:1,waveBreak:5},{type:4,baseAmount:10,spawnPauseTime:1,waveBreak:20},{type:5,baseAmount:1,spawnPauseTime:0,waveBreak:20}];return instance}getOrElse(object1,objectDefault,field,subField){if(object1!==undefined&&object1.hasOwnProperty(field)){if(object1[field].hasOwnProperty(subField)){return object1[field][subField]}}return objectDefault[field][subField]}getTowerAttributeFor(towerClass,statName){var towerName=towerClass.constructor.name;var statSource=this.towerStats.default;var specificStatSource=undefined;if(this.towerStats.hasOwnProperty(towerName)){specificStatSource=this.towerStats[towerName]}return new __WEBPACK_IMPORTED_MODULE_1__towerAttribute__["a"](this.getOrElse(specificStatSource,statSource,statName,"name"),this.getOrElse(specificStatSource,statSource,statName,"baseValue"),this.getOrElse(specificStatSource,statSource,statName,"priceBaseValue"),this.getOrElse(specificStatSource,statSource,statName,"multi"),this.getOrElse(specificStatSource,statSource,statName,"priceMulti"))}getEnemyAttributeFor(enemyClass,statName,level){var enemyName=enemyClass.constructor.name;var statSource=this.enemyStats.default;var specificStatSource=undefined;if(this.enemyStats.hasOwnProperty(enemyName)){if(this.enemyStats[enemyName].hasOwnProperty(statName)){specificStatSource=this.enemyStats[enemyName]}}return new __WEBPACK_IMPORTED_MODULE_0__enemyAttribute__["a"](this.getOrElse(specificStatSource,statSource,statName,"baseValue"),this.getOrElse(specificStatSource,statSource,statName,"multi"),level)}}const statics=new Statics;__webpack_exports__["a"]=statics},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_exports__["a"]=getMouse;var __WEBPACK_IMPORTED_MODULE_0__game__=__webpack_require__(0);function getMouse(e){var element=__WEBPACK_IMPORTED_MODULE_0__game__["default"].canvas,offsetX=0,offsetY=0,mx,my;if(element.offsetParent!==undefined){do{offsetX+=element.offsetLeft;offsetY+=element.offsetTop}while(element=element.offsetParent)}offsetX+=__WEBPACK_IMPORTED_MODULE_0__game__["default"].stylePaddingLeft+__WEBPACK_IMPORTED_MODULE_0__game__["default"].styleBorderLeft+__WEBPACK_IMPORTED_MODULE_0__game__["default"].htmlLeft;offsetY+=__WEBPACK_IMPORTED_MODULE_0__game__["default"].stylePaddingTop+__WEBPACK_IMPORTED_MODULE_0__game__["default"].styleBorderTop+__WEBPACK_IMPORTED_MODULE_0__game__["default"].htmlTop;mx=e.pageX-offsetX;my=e.pageY-offsetY;return{x:mx,y:my}}function inheritPseudoClass(Super,Sub){Sub.prototype=Object.create(Super.prototype);Sub.prototype.constructor=Sub}},function(module,__webpack_exports__,__webpack_require__){"use strict";var __WEBPACK_IMPORTED_MODULE_0__game__=__webpack_require__(0);var __WEBPACK_IMPORTED_MODULE_1__helper__=__webpack_require__(2);__webpack_exports__["a"]=class{constructor(x,y,width,height,text,color,clickEvent,clickContext){this.x=x;this.y=y;this.width=width;this.height=height;this.color=color;this.text=text;this.clickEvent=clickEvent;this.clickContext=clickContext;__WEBPACK_IMPORTED_MODULE_0__game__["default"].canvas.addEventListener("mousedown",this.handleMouseDown.bind(this),true)}handleMouseDown(e){if(__WEBPACK_IMPORTED_MODULE_0__game__["default"].gameState=="GAMEOVER"){return}var mouse=Object(__WEBPACK_IMPORTED_MODULE_1__helper__["a"])(e);if(mouse.x>this.x&&mouse.y>this.y&&mouse.x<this.x+this.width&&mouse.y<this.y+this.height){this.clickEvent.apply(this.clickContext,mouse)}}draw(ctx){ctx.font="10px Arial";ctx.fillStyle=this.color;ctx.fillRect(this.x,this.y,this.width,this.height);ctx.fillStyle="black";ctx.textAlign="center";ctx.fillText(this.text,this.x+this.width/2,this.y+this.height/2+4)}setColor(color){this.color=color}}},function(module,__webpack_exports__,__webpack_require__){"use strict";class TowerAttribute{constructor(shortDesc,baseValue,basePrice,multiplier,priceMultiplier){this.shortDesc=shortDesc;this.baseValue=baseValue;this.basePrice=basePrice;this.multiplier=multiplier;this.priceMultiplier=priceMultiplier;this.level=1}calc(base,multi,level){return base+multi*level}getValue(){return this.calc(this.baseValue,this.multiplier,this.level)}getUpgradeValue(){return this.calc(this.baseValue,this.multiplier,this.level+1)}getUpgradePrice(){return this.calc(this.basePrice,this.priceMultiplier,this.level)}getLevel(){return this.level}increaseLevel(){this.level+=1}}__webpack_exports__["a"]=TowerAttribute;class ProcentualTowerAttribute extends TowerAttribute{constructor(shortDesc,baseValue,basePrice,multiplier,priceMultiplier){super(shortDesc,baseValue,basePrice,multiplier,priceMultiplier)}calc(base,multi,level){return base*Math.pow(1+multi/100,level)}}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"d",function(){return weakSelectorNearestOne});__webpack_require__.d(__webpack_exports__,"b",function(){return hardSelectorNearestOne});__webpack_require__.d(__webpack_exports__,"a",function(){return fastestSelectorNearestOne});__webpack_require__.d(__webpack_exports__,"c",function(){return enemySelectorNearestOne});var __WEBPACK_IMPORTED_MODULE_0__game__=__webpack_require__(0);var calcDistance=function(x1,y1,x2,y2){var a=x1-x2;var b=y1-y2;return Math.sqrt(a*a+b*b)};var enemySelectorNearestOne={name:"Nearest",find:function(tower){var nearestEnemy=null;var bestDistance=Number.MAX_VALUE;for(let i=0;i<__WEBPACK_IMPORTED_MODULE_0__game__["default"].enemies.length;i++){var enemy=__WEBPACK_IMPORTED_MODULE_0__game__["default"].enemies[i];var distance=calcDistance(tower.x+tower.width/2,tower.y+tower.height/2,enemy.x,enemy.y);if(distance>tower.attackRange.getValue()){continue}if(distance<bestDistance){nearestEnemy=enemy;bestDistance=distance}}return nearestEnemy}};var hardSelectorNearestOne={name:"Hard",find:function(tower){var hardestEnemy=null;var bestDistance=Number.MAX_VALUE;var mostLive=Number.MIN_VALUE;for(var key in __WEBPACK_IMPORTED_MODULE_0__game__["default"].enemies){var enemy=__WEBPACK_IMPORTED_MODULE_0__game__["default"].enemies[key];var distance=calcDistance(tower.x+tower.width/2,tower.y+tower.height/2,enemy.x,enemy.y);if(distance>tower.attackRange.getValue()){continue}if(enemy.currentHealthPoints>mostLive){hardestEnemy=enemy;mostLive=enemy.currentHealthPoints;bestDistance=distance}if(enemy.currentHealthPoints==mostLive){if(distance<bestDistance){hardestEnemy=enemy;mostLive=enemy.currentHealthPoints;bestDistance=distance}}if(distance<bestDistance){if(distance<tower.attackRange.getValue()){hardestEnemy=enemy;bestDistance=distance}}}return hardestEnemy}};var weakSelectorNearestOne={name:"Weak",find:function(tower){var lowestEnemy=null;var bestDistance=Number.MAX_VALUE;var leastLive=Number.MAX_VALUE;for(var key in __WEBPACK_IMPORTED_MODULE_0__game__["default"].enemies){var enemy=__WEBPACK_IMPORTED_MODULE_0__game__["default"].enemies[key];var distance=calcDistance(tower.x+tower.width/2,tower.y+tower.height/2,enemy.x,enemy.y);if(distance>tower.attackRange.getValue()){continue}if(enemy.currentHealthPoints>leastLive){lowestEnemy=enemy;leastLive=enemy.currentHealthPoints;bestDistance=distance}if(enemy.currentHealthPoints==leastLive){if(distance<bestDistance){lowestEnemy=enemy;leastLive=enemy.currentHealthPoints;bestDistance=distance}}if(distance<bestDistance){if(distance<tower.attackRange.getValue()){lowestEnemy=enemy;bestDistance=distance}}}return lowestEnemy}};var fastestSelectorNearestOne={name:"Fastest",find:function(tower){var fastestEnemy=null;var bestDistance=Number.MAX_VALUE;var fastest=Number.MAX_VALUE;for(var key in __WEBPACK_IMPORTED_MODULE_0__game__["default"].enemies){var enemy=__WEBPACK_IMPORTED_MODULE_0__game__["default"].enemies[key];var distance=calcDistance(tower.x+tower.width/2,tower.y+tower.height/2,enemy.x,enemy.y);if(distance>tower.attackRange.getValue()){continue}if(enemy.speed<fastest){fastestEnemy=enemy;fastest=enemy.speed;bestDistance=distance}if(enemy.speed==fastest){if(distance<bestDistance){fastestEnemy=enemy;fastest=enemy.speed;bestDistance=distance}}if(distance<bestDistance){if(distance<tower.attackRange.getValue()){fastestEnemy=enemy;bestDistance=distance}}}return fastestEnemy}}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_exports__["a"]=class{constructor(baseValue,multiplier,level){this.baseValue=baseValue;this.multiplier=multiplier;this.level=level}getValue(){return this.baseValue+this.multiplier*this.level}getLevel(){return this.level}increaseLevel(){this.level+=1}}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",function(){return enemyWaveGenerator});var __WEBPACK_IMPORTED_MODULE_0__EnemyTpyes__=__webpack_require__(12);var __WEBPACK_IMPORTED_MODULE_1__game__=__webpack_require__(0);var __WEBPACK_IMPORTED_MODULE_2__Statics__=__webpack_require__(1);class EnemyWaveGenerator{constructor(){this.currentWave=1;this.state="break";this.waveSpawnWaitTime=1e3;this.wavePower=100;this.elapsedTime=0;this.updatedStatsForWave=false;this.waveBreak=15e3;this.printEnemies=true}getWaveInfo(waveNumber){waveNumber=waveNumber%__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].wavePattern.length;return __WEBPACK_IMPORTED_MODULE_2__Statics__["a"].wavePattern[waveNumber]}update(delta){this.elapsedTime+=delta;if(this.state=="break"&&this.elapsedTime>=this.waveBreak){this.state="wave";this.elapsedTime=0;this.currentWave++;var waveInfo=this.getWaveInfo(this.currentWave);this.currentWaveEnemyLeft=waveInfo.baseAmount;this.waveSpawnWaitTime=waveInfo.spawnPauseTime*1e3;this.updatedStatsForWave=true}if(this.state=="wave"&&this.elapsedTime>=this.waveSpawnWaitTime){var waveInfo=this.getWaveInfo(this.currentWave);var enemy=this.buildEnemy(waveInfo);__WEBPACK_IMPORTED_MODULE_1__game__["default"].addEnemy(enemy);this.currentWaveEnemyLeft--;if(this.currentWaveEnemyLeft==0){this.state="break";this.waveBreak=waveInfo.waveBreak*1e3}this.elapsedTime=0}}buildEnemy(waveInfo){var startX=__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].startX*__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].tileSize+__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].tileSize/2;var startY=__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].startY*__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].tileSize+__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].tileSize/2;switch(waveInfo.type){case 1:{var enemy=new __WEBPACK_IMPORTED_MODULE_0__EnemyTpyes__["a"](startX,startY,this.currentWave);break}case 2:{var enemy=new __WEBPACK_IMPORTED_MODULE_0__EnemyTpyes__["c"](startX,startY,this.currentWave);break}case 3:{var enemy=new __WEBPACK_IMPORTED_MODULE_0__EnemyTpyes__["e"](startX,startY,this.currentWave);break}case 4:{var enemy=new __WEBPACK_IMPORTED_MODULE_0__EnemyTpyes__["d"](startX,startY,this.currentWave);break}case 5:{var enemy=new __WEBPACK_IMPORTED_MODULE_0__EnemyTpyes__["b"](startX,startY,this.currentWave);break}}if(this.updatedStatsForWave&&this.printEnemies){var lastEnemiesTableBody=document.getElementById("lastEnemyTableBody");var currentWaveRow=document.createElement("tr");var typeColumn=document.createElement("td");currentWaveRow.appendChild(typeColumn);typeColumn.innerText=enemy.constructor.name;var hpColumn=document.createElement("td");hpColumn.className="hpCol";currentWaveRow.appendChild(hpColumn);hpColumn.innerText=Math.floor(enemy.maxHealthPoints*100)/100;lastEnemiesTableBody.prepend(currentWaveRow);this.updatedStatsForWave=false}return enemy}}let enemyWaveGenerator=new EnemyWaveGenerator},function(module,__webpack_exports__,__webpack_require__){"use strict";var __WEBPACK_IMPORTED_MODULE_0__DebugOptions__=__webpack_require__(14);var __WEBPACK_IMPORTED_MODULE_1__game__=__webpack_require__(0);var __WEBPACK_IMPORTED_MODULE_2__Statics__=__webpack_require__(1);class PathFinder{constructor(){this.openList=[];this.closedList=[]}sort(a,b){var factor=1.4;if(b.distance*factor+b.pathLength>a.distance*factor+a.pathLength){return-1}if(b.distance*factor+b.pathLength<a.distance*factor+a.pathLength){return 1}return 0}calcDistance(x1,y1,x2,y2){var a=x1-x2;var b=y1-y2;return Math.sqrt(a*a+b*b)}expandTile(closedList,openList,grid,element,x,y,endX,endY){for(var i=0;i<closedList.length;i++){var current=closedList[i];if(current.x==x&&current.y==y){return}}var tile=grid[x][y];if(tile.isWalkable()){var pathLength=element.pathLength+this.calcDistance(element.x,element.y,x,y);var elementInOpenList=null;var openListIndex=0;for(var openListIndex=0;openListIndex<openList.length;openListIndex++){var current=openList[openListIndex];if(current.x==x&&current.y==y){elementInOpenList=current}}if(elementInOpenList!=null){if(elementInOpenList.pathLength>pathLength){openList.splice(openListIndex,1)}else{return}}openList.push({x,y,distance:this.calcDistance(x,y,endX,endY),pathLength,previous:element,length:element.length+1})}}formatPath(end){var path=[];path.push();var currentElement=end;do{path.push({x:currentElement.x,y:currentElement.y});currentElement=currentElement.previous}while(currentElement!=null);return path}async findPathAsync(startX,startY,endX,endY,grid,width,height){return this.findPath(startX,startY,endX,endY,grid,width,height)}findPath(startX,startY,endX,endY,grid,width,height){this.openList=[];this.closedList=[];this.openList.push({x:startX,y:startY,distance:this.calcDistance(startX,startY,endX,endY),pathLength:0,previous:null,length:0});var checkedTiles=0;while(this.openList.length>0){this.openList.sort(this.sort);var element=this.openList.shift();checkedTiles++;if(element.x==endX&&element.y==endY){console.log("Took "+checkedTiles+" checks to find Path");return formatPath(element)}if(this.debugPathFinding){this.sleep(20)}this.closedList.push(element);if(element.y>0){var x=element.x;var y=element.y-1;this.expandTile(this.closedList,this.openList,grid,element,x,y,endX,endY)}if(element.y<height-1){var x=element.x;var y=element.y+1;this.expandTile(this.closedList,this.openList,grid,element,x,y,endX,endY)}if(element.x<width-1){var x=element.x+1;var y=element.y;this.expandTile(this.closedList,this.openList,grid,element,x,y,endX,endY)}if(element.x>0){var x=element.x-1;var y=element.y;this.expandTile(this.closedList,this.openList,grid,element,x,y,endX,endY)}}console.log("Took "+checkedTiles+" checks to find no Path");var nearestElementToEnd={distance:Number.MAX_VALUE};for(var i=0;i<this.closedList.length;i++){var element=this.closedList[i];if(element.distance<nearestElementToEnd.distance){nearestElementToEnd=element}}return this.formatPath(nearestElementToEnd)}draw(ctx){ctx.fillStyle="#C9C9C9";var margin=__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].tileSize/4;if(__WEBPACK_IMPORTED_MODULE_1__game__["default"].path!=null){for(var i=0;i<__WEBPACK_IMPORTED_MODULE_1__game__["default"].path.length;i++){var currentTile=__WEBPACK_IMPORTED_MODULE_1__game__["default"].tiles[__WEBPACK_IMPORTED_MODULE_1__game__["default"].path[i].x][__WEBPACK_IMPORTED_MODULE_1__game__["default"].path[i].y];ctx.fillRect(currentTile.x+margin,currentTile.y+margin,currentTile.width-margin*2,currentTile.height-margin*2)}}if(!__WEBPACK_IMPORTED_MODULE_0__DebugOptions__["a"].debugPathFinding){return}if(!this.openList||!this.closedList||!__WEBPACK_IMPORTED_MODULE_1__game__["default"].tiles){return}ctx.fillStyle="green";var margin=__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].tileSize/5;for(i=0;i<this.openList.length;i++){currentTile=__WEBPACK_IMPORTED_MODULE_1__game__["default"].tiles[this.openList[i].x][this.openList[i].y];ctx.fillRect(currentTile.x+margin,currentTile.y+margin,currentTile.width-margin*2,currentTile.height-margin*2)}ctx.fillStyle="red";for(var i=0;i<this.closedList.length;i++){if(isNaN(this.closedList[i].x)||isNaN(this.closedList[i].y)){continue}currentTile=__WEBPACK_IMPORTED_MODULE_1__game__["default"].tiles[this.closedList[i].x][this.closedList[i].y];ctx.fillRect(currentTile.x+margin,currentTile.y+margin,currentTile.width-margin*2,currentTile.height-margin*2)}}sleep(ms){return new Promise(r=>setTimeout(r,ms))}}const pathFinder=new PathFinder;__webpack_exports__["a"]=pathFinder},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_exports__["a"]=class{constructor(){}isActive(){console.log("BaseClass Active called!");return true}}},function(module,__webpack_exports__,__webpack_require__){"use strict";var __WEBPACK_IMPORTED_MODULE_0__game__=__webpack_require__(0);__webpack_exports__["a"]=class{constructor(x,y,width,height){this.margin=.2;this.x=x;this.y=y;this.width=width;this.height=height;this.selected=false;this.tower=null}isWalkable(){return this.tower==null}draw(ctx){ctx.fillStyle="#bbbbbb";ctx.fillRect(this.x+this.margin,this.y+this.margin,this.width-this.margin*2,this.height-this.margin*2);if(this.tower!=null){this.tower.draw(ctx)}}drawSelection(ctx){if(this.selected){ctx.fillStyle="#87CEFA";ctx.globalAlpha=.6;ctx.fillRect(this.x+this.margin,this.y+this.margin,this.width-this.margin*2,this.height-this.margin*2);ctx.globalAlpha=1}if(this.tower!=null&&this.selected){this.tower.drawSelection(ctx)}}update(delta){if(this.tower!=null){this.tower.update(delta);if(this.tower.currentHealthPoints==0){this.tower=null;__WEBPACK_IMPORTED_MODULE_0__game__["default"].gameAreaChanged()}}}hit(attackPower){var tower=this.tower;if(tower==null){console.log("No Tower here "+this.x+" / "+this.y)}else{tower.hit(attackPower)}}}},function(module,__webpack_exports__,__webpack_require__){"use strict";var __WEBPACK_IMPORTED_MODULE_0__game__=__webpack_require__(0);var __WEBPACK_IMPORTED_MODULE_1__helper__=__webpack_require__(2);var __WEBPACK_IMPORTED_MODULE_2__Statics__=__webpack_require__(1);var __WEBPACK_IMPORTED_MODULE_3__EnemyWaveGenerator__=__webpack_require__(7);__webpack_exports__["a"]=class{constructor(){this.height=70;let padding=5;this.infoSection={x:__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].infoRegionX+padding,y:__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].infoRegionY+padding,width:__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].infoRegionWidth-padding*2,height:10};var infoSection=this.infoSection;this.runControl={x:infoSection.x+infoSection.width-infoSection.height,y:infoSection.y,width:infoSection.height,height:infoSection.height,hit(mx,my){return mx>this.x&&my>this.y&&mx<this.x+this.width&&my<this.y+this.height}};this.speedControl={x:infoSection.x+infoSection.width-infoSection.height*3,y:infoSection.y,width:infoSection.height,height:infoSection.height,hit(mx,my){return mx>this.x&&my>this.y&&mx<this.x+this.width&&my<this.y+this.height}};__WEBPACK_IMPORTED_MODULE_0__game__["default"].canvas.addEventListener("mousedown",this.handleMouseDown.bind(this),true)}draw(ctx){this.drawControls(ctx);this.drawInfoObject(ctx,"Money",Math.floor(__WEBPACK_IMPORTED_MODULE_0__game__["default"].money),2);this.drawInfoObject(ctx,"Wave",__WEBPACK_IMPORTED_MODULE_3__EnemyWaveGenerator__["a"].currentWave,3);this.drawInfoObject(ctx,"Health",Math.floor(__WEBPACK_IMPORTED_MODULE_0__game__["default"].endTile.currentHealth)+"/"+__WEBPACK_IMPORTED_MODULE_0__game__["default"].endTile.maxHealth,4)}drawInfoObject(ctx,name,value,pos){var infoSection=this.infoSection;ctx.fillStyle="#111111";ctx.font="9px Arial";ctx.textAlign="start";ctx.fillText(name,infoSection.x,(infoSection.y+9)*pos);ctx.textAlign="end";ctx.fillText(value,infoSection.x+infoSection.width,(infoSection.y+9)*pos)}drawControls(ctx){ctx.fillStyle="#111111";var runControl=this.runControl;if(__WEBPACK_IMPORTED_MODULE_0__game__["default"].gameState=="RUNNING"){ctx.fillRect(runControl.x,runControl.y,runControl.height/10*4,runControl.height);ctx.fillRect(runControl.x+runControl.height/10*6,runControl.y,runControl.height/10*4,runControl.height)}else if(__WEBPACK_IMPORTED_MODULE_0__game__["default"].gameState=="PAUSED"){ctx.beginPath();ctx.moveTo(runControl.x,runControl.y);ctx.lineTo(runControl.x+runControl.width,runControl.y+runControl.height/2);ctx.lineTo(runControl.x,runControl.y+runControl.height);ctx.closePath();ctx.fill()}var speed=__WEBPACK_IMPORTED_MODULE_0__game__["default"].getSpeedMultiplier();var speedControl=this.speedControl;var arrowWidth=speedControl.width/speed;for(var i=0;i<speed;i++){ctx.beginPath();ctx.moveTo(arrowWidth*i+speedControl.x,speedControl.y);ctx.lineTo(arrowWidth*i+speedControl.x+arrowWidth,speedControl.y+speedControl.height/2);ctx.lineTo(arrowWidth*i+speedControl.x,speedControl.y+speedControl.height);ctx.closePath();ctx.fill()}}handleMouseDown(e){if(__WEBPACK_IMPORTED_MODULE_0__game__["default"].gameState=="GAMEOVER"){return}var mouse=Object(__WEBPACK_IMPORTED_MODULE_1__helper__["a"])(e);var runControl=this.runControl;if(runControl.hit(mouse.x,mouse.y)){if(__WEBPACK_IMPORTED_MODULE_0__game__["default"].gameState=="PAUSED"){__WEBPACK_IMPORTED_MODULE_0__game__["default"].gameState="RUNNING"}else if(__WEBPACK_IMPORTED_MODULE_0__game__["default"].gameState=="RUNNING"){__WEBPACK_IMPORTED_MODULE_0__game__["default"].gameState="PAUSED"}}if(this.speedControl.hit(mouse.x,mouse.y)){var speed=__WEBPACK_IMPORTED_MODULE_0__game__["default"].getSpeedMultiplier();speed++;if(speed>4){speed=1}console.log("New SpeedMultiplier: "+speed);__WEBPACK_IMPORTED_MODULE_0__game__["default"].setSpeedMultiplier(speed)}}update(){}getHeight(){return this.height}}},function(module,__webpack_exports__,__webpack_require__){"use strict";var __WEBPACK_IMPORTED_MODULE_0__Enemy__=__webpack_require__(13);var __WEBPACK_IMPORTED_MODULE_1__Statics__=__webpack_require__(1);class BasicEnemy extends __WEBPACK_IMPORTED_MODULE_0__Enemy__["a"]{constructor(x,y,level){var color="blue";var speed=.8;super(x,y,color,speed,level)}}__webpack_exports__["a"]=BasicEnemy;class FastEnemy extends __WEBPACK_IMPORTED_MODULE_0__Enemy__["a"]{constructor(x,y,level){var color="green";var speed=1.3;super(x,y,color,speed,level)}}__webpack_exports__["c"]=FastEnemy;class SlowEnemy extends __WEBPACK_IMPORTED_MODULE_0__Enemy__["a"]{constructor(x,y,level){var color="yellow";var speed=.6;super(x,y,color,speed,level)}}__webpack_exports__["e"]=SlowEnemy;class GroupEnemy extends __WEBPACK_IMPORTED_MODULE_0__Enemy__["a"]{constructor(x,y,level){var color="black";var speed=.8;super(x,y,color,speed,level)}}__webpack_exports__["d"]=GroupEnemy;class BossEnemy extends __WEBPACK_IMPORTED_MODULE_0__Enemy__["a"]{constructor(x,y,level){var color="red";var speed=.1;super(x,y,color,speed,level)}}__webpack_exports__["b"]=BossEnemy},function(module,__webpack_exports__,__webpack_require__){"use strict";var __WEBPACK_IMPORTED_MODULE_0__game__=__webpack_require__(0);var __WEBPACK_IMPORTED_MODULE_1__PathFinder__=__webpack_require__(8);var __WEBPACK_IMPORTED_MODULE_2__Statics__=__webpack_require__(1);var __WEBPACK_IMPORTED_MODULE_3__TextGoUpEffect__=__webpack_require__(15);var __WEBPACK_IMPORTED_MODULE_4__enemyAttribute__=__webpack_require__(6);class Enemy{constructor(x,y,color,speed,level){this.level=level;this.x=x;this.y=y;this.size=__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].tileSize/3.5;this.color=color;this.speed=speed;this.lastAttack=Number.MAX_VALUE;this.attacksPerSeconds=__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].getEnemyAttributeFor(this,"attacksPerSecond",level);this.attackPower=__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].getEnemyAttributeFor(this,"attackDamage",level);this.maxHealthPoints=__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].getEnemyAttributeFor(this,"healthPoints",level).getValue();this.currentHealthPoints=this.maxHealthPoints;this.nextWalkPoint=null;this.reachedGoal=false;this.customPath=null}draw(ctx){ctx.beginPath();ctx.fillStyle=this.color;ctx.arc(this.x,this.y,this.size,0,2*Math.PI);ctx.closePath();ctx.fill();if(this.maxHealthPoints>this.currentHealthPoints){ctx.fillStyle="red";ctx.fillRect(this.x-this.size,this.y-this.size*1.7,this.size*2,this.size*2/8);ctx.fillStyle="green";var healthWidth=this.size*2/this.maxHealthPoints*this.currentHealthPoints;ctx.fillRect(this.x-this.size,this.y-this.size*1.7,healthWidth,this.size*2/8)}}calculateWalkPoint(){var currentPath=__WEBPACK_IMPORTED_MODULE_0__game__["default"].path;if(this.customPath!=null){currentPath=this.customPath}var xPos=Math.floor(this.x/__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].tileSize);var yPos=Math.floor(this.y/__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].tileSize);var indexOnPath=null;for(var i=0;i<currentPath.length;i++){var element=currentPath[i];if(element.x==xPos&&element.y==yPos){indexOnPath=i;break}}if(indexOnPath==0){if(xPos==__WEBPACK_IMPORTED_MODULE_0__game__["default"].endTile.coordsX&&yPos==__WEBPACK_IMPORTED_MODULE_0__game__["default"].endTile.coordsY){this.reachedGoal=true;return null}else{this.reachedGoal=false;return null}}if(indexOnPath==null&&this.customPath==null){this.customPath=__WEBPACK_IMPORTED_MODULE_1__PathFinder__["a"].findPath(xPos,yPos,__WEBPACK_IMPORTED_MODULE_0__game__["default"].endTile.coordsX,__WEBPACK_IMPORTED_MODULE_0__game__["default"].endTile.coordsY,__WEBPACK_IMPORTED_MODULE_0__game__["default"].tiles,__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].tilesCountWidth,__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].tilesCountHeight);return this.calculateWalkPoint()}else if(indexOnPath==null){return{x:__WEBPACK_IMPORTED_MODULE_0__game__["default"].endTile.x+__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].tileSize/2,y:__WEBPACK_IMPORTED_MODULE_0__game__["default"].endTile.y+__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].tileSize/2}}return{x:currentPath[indexOnPath-1].x*__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].tileSize+__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].tileSize/2,y:currentPath[indexOnPath-1].y*__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].tileSize+__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].tileSize/2}}attack(delta){this.lastAttack+=delta;var perSec=1e3/this.attacksPerSeconds.getValue();if(this.lastAttack<perSec){return}var xPos=Math.floor(this.x/__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].tileSize);var yPos=Math.floor(this.y/__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].tileSize);var diffX=xPos-__WEBPACK_IMPORTED_MODULE_0__game__["default"].endTile.coordsX;var diffY=yPos-__WEBPACK_IMPORTED_MODULE_0__game__["default"].endTile.coordsY;if(diffX<diffY){if(diffX<=0){this.attackAt(xPos+1,yPos)}else{this.attackAt(xPos-1,yPos)}}else{if(diffY<=0){this.attackAt(xPos,yPos+1)}else{this.attackAt(xPos,yPos-1)}}}attackAt(x,y){var tile=__WEBPACK_IMPORTED_MODULE_0__game__["default"].tiles[x][y];tile.hit(this.attackPower.getValue());this.hit(this.attackPower.getValue())}hit(points){if(this.currentHealthPoints>0&&this.currentHealthPoints-points<=0){this.currentHealthPoints=0;var moneyEarned=Math.round(this.level/3);__WEBPACK_IMPORTED_MODULE_0__game__["default"].money+=moneyEarned;__WEBPACK_IMPORTED_MODULE_0__game__["default"].entities.push(new __WEBPACK_IMPORTED_MODULE_3__TextGoUpEffect__["a"](this.x,this.y,moneyEarned,"#229922"))}else{this.currentHealthPoints-=points}}update(delta){if(this.nextWalkPoint==null){this.nextWalkPoint=this.calculateWalkPoint()}if(!this.reachedGoal){if(this.nextWalkPoint==null&&!this.reachedGoal){var xPos=Math.floor(this.x/__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].tileSize);var yPos=Math.floor(this.y/__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].tileSize);var tx=xPos*__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].tileSize+__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].tileSize/2-this.x;var ty=yPos*__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].tileSize+__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].tileSize/2-this.y;var dist=Math.sqrt(tx*tx+ty*ty);if(dist!=0){var velX=tx/dist*this.speed*.75;var velY=ty/dist*this.speed*.75;this.x+=velX;this.y+=velY}this.attack(delta)}else{var tx=this.nextWalkPoint.x-this.x;var ty=this.nextWalkPoint.y-this.y;var dist=Math.sqrt(tx*tx+ty*ty);if(dist<=this.size){this.nextWalkPoint=null}else{var velX=tx/dist*this.speed*.75;var velY=ty/dist*this.speed*.75;this.x+=velX;this.y+=velY}}}}isDead(){return this.currentHealthPoints<=0}}__webpack_exports__["a"]=Enemy},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_exports__["a"]=class{get debugPathFinding(){return false}}},function(module,__webpack_exports__,__webpack_require__){"use strict";var __WEBPACK_IMPORTED_MODULE_0__game__=__webpack_require__(0);__webpack_exports__["a"]=class{constructor(x,y,text,color){this.x=x;this.y=y;this.text=text;this.color=color;this.velY=.01;this.opacity=1;this.effectTime=3e3;this.elapsedTime=0}update(delta){this.elapsedTime+=delta;this.opacity=1-this.elapsedTime/this.effectTime;this.y-=this.velY*delta}draw(){var ctx=__WEBPACK_IMPORTED_MODULE_0__game__["default"].context;ctx.fillStyle=this.color;ctx.font="8px Arial";ctx.globalAlpha=this.opacity;var previousBaseLine=ctx.textBaseline;ctx.textBaseline="middle";ctx.textAlign="center";ctx.fillText(this.text,this.x,this.y);ctx.globalAlpha=1;ctx.textBaseline=this.previousBaseLine}isActive(){return this.opacity>=0}}},function(module,__webpack_exports__,__webpack_require__){"use strict";var __WEBPACK_IMPORTED_MODULE_0__InfoAreaComponent__=__webpack_require__(9);var __WEBPACK_IMPORTED_MODULE_1__InfoAreaTowerMenuUpgradeComponent__=__webpack_require__(17);var __WEBPACK_IMPORTED_MODULE_2__infoAreaTowerMenuEnemySelection__=__webpack_require__(18);var __WEBPACK_IMPORTED_MODULE_3__game__=__webpack_require__(0);var __WEBPACK_IMPORTED_MODULE_4__Statics__=__webpack_require__(1);var __WEBPACK_IMPORTED_MODULE_5__Button__=__webpack_require__(3);__webpack_exports__["a"]=class extends __WEBPACK_IMPORTED_MODULE_0__InfoAreaComponent__["a"]{constructor(){super();this.towerAttributeUpgradeComponents=[];__WEBPACK_IMPORTED_MODULE_3__game__["default"].registerSelectionChanged(this.onTowerSelectionChanged.bind(this))}isActive(){for(var x=0;x<__WEBPACK_IMPORTED_MODULE_3__game__["default"].tiles.length;x++){for(var y=0;y<__WEBPACK_IMPORTED_MODULE_3__game__["default"].tiles[x].length;y++){var tile=__WEBPACK_IMPORTED_MODULE_3__game__["default"].tiles[x][y];if(tile.selected&&tile.tower!=null){return true}}}return false}init(){var padding=5;var currentX=padding;var currentY=__WEBPACK_IMPORTED_MODULE_3__game__["default"].gameInfo.getHeight()+padding;this.infoSection={x:__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].infoRegionX+padding,y:currentY,width:__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].infoRegionWidth-padding*2,height:__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].tileSize};currentY+=padding;var upgradeComponentX=__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].infoRegionX+padding;var upgradeComponentHeight=__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].tileSize*1.1;var upgradeComponentWidth=__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].infoRegionWidth-padding*2-__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].tileSize*.7;this.towerAttributeUpgradeComponents.push(new __WEBPACK_IMPORTED_MODULE_1__InfoAreaTowerMenuUpgradeComponent__["a"]("AD",upgradeComponentX,currentY,upgradeComponentWidth,upgradeComponentHeight,"attackPower"));currentY+=padding+upgradeComponentHeight;this.towerAttributeUpgradeComponents.push(new __WEBPACK_IMPORTED_MODULE_1__InfoAreaTowerMenuUpgradeComponent__["a"]("DPS",upgradeComponentX,currentY,upgradeComponentWidth,upgradeComponentHeight,"attacksPerSeconds"));currentY+=padding+upgradeComponentHeight;this.towerAttributeUpgradeComponents.push(new __WEBPACK_IMPORTED_MODULE_1__InfoAreaTowerMenuUpgradeComponent__["a"]("R",upgradeComponentX,currentY,upgradeComponentWidth,upgradeComponentHeight,"attackRange"));currentY+=padding+upgradeComponentHeight;this.enemySelectionComponent=new __WEBPACK_IMPORTED_MODULE_2__infoAreaTowerMenuEnemySelection__["a"](__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].infoRegionX+padding,currentY,__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].infoRegionWidth-padding*2,__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].tileSize*.7);currentY+=padding+this.enemySelectionComponent.height;this.sellButton=new __WEBPACK_IMPORTED_MODULE_5__Button__["a"](__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].infoRegionX+padding,currentY,__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].infoRegionWidth-padding*2,__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].tileSize*.7,"Sell","red",this.onSellClick,this)}draw(ctx){for(var i=0;i<this.towerAttributeUpgradeComponents.length;i++){var element=this.towerAttributeUpgradeComponents[i];element.draw(ctx)}this.enemySelectionComponent.draw(ctx);this.sellButton.draw(ctx)}update(){for(var i=0;i<this.towerAttributeUpgradeComponents.length;i++){var element=this.towerAttributeUpgradeComponents[i];element.update()}}onTowerSelectionChanged(){var selectedTowers=[];for(var x=0;x<__WEBPACK_IMPORTED_MODULE_3__game__["default"].tiles.length;x++){for(var y=0;y<__WEBPACK_IMPORTED_MODULE_3__game__["default"].tiles[x].length;y++){var tile=__WEBPACK_IMPORTED_MODULE_3__game__["default"].tiles[x][y];if(tile.selected&&tile.tower!=null){selectedTowers.push(tile.tower)}}}for(var i=0;i<this.towerAttributeUpgradeComponents.length;i++){var element=this.towerAttributeUpgradeComponents[i];element.calculateCurrentData(selectedTowers)}this.enemySelectionComponent.calculateCurrentData(selectedTowers)}onTargetSwitchClick(){console.log("TargetSwitch")}onSellClick(){if(!this.isActive()){return}for(var x=0;x<__WEBPACK_IMPORTED_MODULE_3__game__["default"].tiles.length;x++){for(var y=0;y<__WEBPACK_IMPORTED_MODULE_3__game__["default"].tiles[x].length;y++){var currentTile=__WEBPACK_IMPORTED_MODULE_3__game__["default"].tiles[x][y];if(currentTile.selected&&currentTile.tower!=null){__WEBPACK_IMPORTED_MODULE_3__game__["default"].money+=currentTile.tower.prize;currentTile.tower=null}}}__WEBPACK_IMPORTED_MODULE_3__game__["default"].gameAreaChanged()}}},function(module,__webpack_exports__,__webpack_require__){"use strict";var __WEBPACK_IMPORTED_MODULE_0__Button__=__webpack_require__(3);var __WEBPACK_IMPORTED_MODULE_1__game__=__webpack_require__(0);__webpack_exports__["a"]=class{constructor(name,x,y,width,height,attributeName){this.name=name;this.x=x;this.y=y;this.width=width;this.height=height;this.attributeName=attributeName;this.currentData=null;this.upgradeButton=new __WEBPACK_IMPORTED_MODULE_0__Button__["a"](x+width,y,height,height,"U","green",this.onUpgrade,this);this.calculateCurrentData([])}isActive(){return this.currentData.towers.length>0}draw(ctx){ctx=__WEBPACK_IMPORTED_MODULE_1__game__["default"].context;ctx.strokeStyle="#777777";ctx.lineWidth=.5;ctx.strokeRect(this.x,this.y,this.width,this.height);ctx.fillStyle="#111111";ctx.font="9px Arial";var previousBaseLine=ctx.textBaseline;ctx.textBaseline="middle";ctx.textAlign="start";ctx.fillText(this.name,this.x+2,this.y+this.height/4);ctx.textAlign="end";ctx.fillText(Math.floor(this.currentData.currentCombined),this.x+this.width-2,this.y+this.height/4);ctx.textAlign="start";ctx.fillText(Math.floor(this.currentData.priceCombined),this.x+2,this.y+this.height/4*3);ctx.textAlign="end";ctx.fillText(Math.floor(this.currentData.nextCombined),this.x+this.width-2,this.y+this.height/4*3);ctx.textBaseline=previousBaseLine;this.upgradeButton.draw(ctx)}calculateCurrentData(selectedTowers){this.selectedTowers=selectedTowers;var currentCombined=null;var nextCombined=null;var priceCombined=null;var minLevel=Number.MAX_VALUE;var towers=[];for(var i=0;i<selectedTowers.length;i++){var tower=selectedTowers[i];var current=tower[this.attributeName].getValue();var next=tower[this.attributeName].getUpgradeValue();var price=tower[this.attributeName].getUpgradePrice();if(tower[this.attributeName].getLevel()<minLevel){minLevel=tower[this.attributeName].getLevel();currentCombined=current;nextCombined=next;priceCombined=price;towers=[tower]}else if(tower[this.attributeName].getLevel()==minLevel){towers.push(tower);currentCombined+=current;nextCombined+=next;priceCombined+=price}}if(towers.length>0){this.currentData={towers,currentCombined,nextCombined,priceCombined}}else{this.currentData={towers:[],currentCombined:0,nextCombined:0,priceCombined:0}}}update(){}onUpgrade(){if(this.currentData.priceCombined<__WEBPACK_IMPORTED_MODULE_1__game__["default"].money){__WEBPACK_IMPORTED_MODULE_1__game__["default"].money-=this.currentData.priceCombined;for(var i=0;i<this.currentData.towers.length;i++){var tower=this.currentData.towers[i];var price=tower[this.attributeName].getUpgradePrice();tower[this.attributeName].increaseLevel()}}this.calculateCurrentData(this.selectedTowers)}}},function(module,__webpack_exports__,__webpack_require__){"use strict";var __WEBPACK_IMPORTED_MODULE_0__enemySelectors__=__webpack_require__(5);var __WEBPACK_IMPORTED_MODULE_1__Button__=__webpack_require__(3);__webpack_exports__["a"]=class{constructor(x,y,width,height){this.x=x;this.y=y;this.width=width;this.height=height;this.currentSelector=null;this.useableSelectors=[];this.selectedTowers=[];this.enemySelectorSwitchButton=new __WEBPACK_IMPORTED_MODULE_1__Button__["a"](this.x,this.y,this.width,this.height,"N/A","lightblue",this.onTargetSwitchClick,this)}draw(ctx){this.enemySelectorSwitchButton.draw(ctx)}calculateCurrentData(selectedTowers){this.selectedTowers=selectedTowers;this.useableSelectors=[];var mostSelected=new Map;for(let i=0;i<selectedTowers.length;i++){const tower=selectedTowers[i];var count=mostSelected.get(tower.enemySelector);if(count==undefined){count=0}count++;mostSelected.set(tower.enemySelector,count);if(this.useableSelectors.length==0){this.useableSelectors=tower.useableSelectors}for(let j=0;j<this.useableSelectors.length;j++){const selector=this.useableSelectors[j];var contains=false;for(let l=0;l<tower.useableSelectors.length;l++){const towerSelector=tower.useableSelectors[l];if(towerSelector==selector){contains=true;break}}if(!contains){this.useableSelectors.splice(j,1)}}}var mostSelectedSelector=null;var highestValue=0;for(var[key,value]of mostSelected.entries()){if(value>highestValue||mostSelectedSelector==null){mostSelectedSelector=key;highestValue=value}}this.currentSelector=mostSelectedSelector;if(this.currentSelector!=null){this.enemySelectorSwitchButton.text=this.currentSelector.name}if(this.useableSelectors.length>1){this.enemySelectorSwitchButton.color="lightblue"}else{this.enemySelectorSwitchButton.color="lightgray"}}onTargetSwitchClick(){var i=this.useableSelectors.indexOf(this.currentSelector);i++;if(i>=this.useableSelectors.length){i=0}this.currentSelector=this.useableSelectors[i];for(let i=0;i<this.selectedTowers.length;i++){const tower=this.selectedTowers[i];if(tower.useableSelectors.indexOf(this.currentSelector)>=0){tower.enemySelector=this.currentSelector}}this.enemySelectorSwitchButton.text=this.currentSelector.name}}},function(module,__webpack_exports__,__webpack_require__){"use strict";var __WEBPACK_IMPORTED_MODULE_0__InfoAreaComponent__=__webpack_require__(9);var __WEBPACK_IMPORTED_MODULE_1__game__=__webpack_require__(0);var __WEBPACK_IMPORTED_MODULE_2__Button__=__webpack_require__(3);var __WEBPACK_IMPORTED_MODULE_3__helper__=__webpack_require__(2);var __WEBPACK_IMPORTED_MODULE_4__Statics__=__webpack_require__(1);var __WEBPACK_IMPORTED_MODULE_5__towerTypes__=__webpack_require__(20);__webpack_exports__["a"]=class extends __WEBPACK_IMPORTED_MODULE_0__InfoAreaComponent__["a"]{constructor(){super();this.towers=[];this.selectedTower;this.enougthMoneyToBuildSelection=false;this.buildButton;this.infoSection;this.buildPrize=0;this.availableTowers=[__WEBPACK_IMPORTED_MODULE_5__towerTypes__["a"],__WEBPACK_IMPORTED_MODULE_5__towerTypes__["b"],__WEBPACK_IMPORTED_MODULE_5__towerTypes__["c"]];__WEBPACK_IMPORTED_MODULE_1__game__["default"].canvas.addEventListener("mousedown",this.handleMouseDown.bind(this),true)}isActive(){return true}init(){var padding=5;var towerSpaceX=__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].infoRegionWidth-padding;var towersPerRow=Math.floor(towerSpaceX/(__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].tileSize+padding));var cleanSpacing=__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].infoRegionWidth-padding-__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].tileSize*towersPerRow-towersPerRow*padding;var currentX=padding;var currentY=__WEBPACK_IMPORTED_MODULE_1__game__["default"].gameInfo.getHeight()+padding;var currentTowersInRow=0;for(var i=0;i<this.availableTowers.length;i++){if(currentTowersInRow>=towersPerRow){currentTowersInRow=0;currentX=padding;currentY+=padding+tileSize}currentTowersInRow+=1;var towerObj={inst:new this.availableTowers[i](currentX+__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].infoRegionX,currentY+__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].infoRegionY,__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].tileSize,__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].tileSize),constructor:this.availableTowers[i]};this.towers.push(towerObj);currentX+=__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].tileSize+padding+cleanSpacing}currentY+=__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].tileSize+padding*4;this.infoSection={x:__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].infoRegionX+padding,y:currentY,width:__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].infoRegionWidth-padding*2,height:__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].tileSize};currentY+=padding;this.buildButton=new __WEBPACK_IMPORTED_MODULE_2__Button__["a"](__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].infoRegionX+padding,currentY,__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].infoRegionWidth-padding*2,__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].tileSize*.7,"Build","green",this.onBuildClick,this)}draw(ctx){var padding=5;for(var i=0;i<this.towers.length;i++){var tower=this.towers[i];tower.inst.draw(ctx);if(tower==this.selectedTower){ctx.strokeStyle="#000000";ctx.strokeRect(tower.inst.x,tower.inst.y,tower.inst.width,tower.inst.height)}}if(this.selectedTower!=null){ctx.fillStyle="#111111";ctx.font="9px Arial";ctx.textAlign="start";ctx.fillText("Prize: ",this.infoSection.x,this.infoSection.y);ctx.textAlign="end";ctx.fillText(this.buildPrize,this.infoSection.x+this.infoSection.width,this.infoSection.y);this.buildButton.draw(ctx)}}update(){var enoughMoney=this.calculacteEnougthMoneyForSelection();if(enoughMoney){this.buildButton.setColor("green")}else{this.buildButton.setColor("gray")}}calculacteEnougthMoneyForSelection(){if(this.selectedTower==null){return false}var towerPrize=this.selectedTower.inst.prize;var numberOfTowersToBuild=0;for(var x=0;x<__WEBPACK_IMPORTED_MODULE_1__game__["default"].tiles.length;x++){for(var y=0;y<__WEBPACK_IMPORTED_MODULE_1__game__["default"].tiles[x].length;y++){var currentTile=__WEBPACK_IMPORTED_MODULE_1__game__["default"].tiles[x][y];if(currentTile.selected&&currentTile.tower==null){numberOfTowersToBuild+=1}}}this.buildPrize=numberOfTowersToBuild*towerPrize;return this.buildPrize<=__WEBPACK_IMPORTED_MODULE_1__game__["default"].money}onBuildClick(mouse){if(!this.isActive()){return}if(this.calculacteEnougthMoneyForSelection()){var towerPrize=this.selectedTower.inst.prize;for(var x=0;x<__WEBPACK_IMPORTED_MODULE_1__game__["default"].tiles.length;x++){for(var y=0;y<__WEBPACK_IMPORTED_MODULE_1__game__["default"].tiles[x].length;y++){var currentTile=__WEBPACK_IMPORTED_MODULE_1__game__["default"].tiles[x][y];if(currentTile.selected&&currentTile.tower==null){if(__WEBPACK_IMPORTED_MODULE_1__game__["default"].money>=towerPrize){__WEBPACK_IMPORTED_MODULE_1__game__["default"].money-=towerPrize;console.log("Build Tower at "+x+" / "+y);currentTile.tower=new this.selectedTower.constructor(currentTile.x,currentTile.y,__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].tileSize,__WEBPACK_IMPORTED_MODULE_4__Statics__["a"].tileSize)}}}}__WEBPACK_IMPORTED_MODULE_1__game__["default"].gameAreaChanged()}}handleMouseDown(e){var mouse=Object(__WEBPACK_IMPORTED_MODULE_3__helper__["a"])(e);for(var i=0;i<this.towers.length;i++){if(mouse.x>this.towers[i].inst.x&&mouse.x<this.towers[i].inst.x+this.towers[i].inst.width&&mouse.y>this.towers[i].inst.y&&mouse.y<this.towers[i].inst.y+this.towers[i].inst.height){this.selectedTower=this.towers[i];return}}}}},function(module,__webpack_exports__,__webpack_require__){"use strict";var __WEBPACK_IMPORTED_MODULE_0__tower__=__webpack_require__(21);var __WEBPACK_IMPORTED_MODULE_1__enemySelectors__=__webpack_require__(5);var __WEBPACK_IMPORTED_MODULE_2__game__=__webpack_require__(0);var __WEBPACK_IMPORTED_MODULE_3__towerAttribute__=__webpack_require__(4);var __WEBPACK_IMPORTED_MODULE_4__bullets_basicTowerBullet__=__webpack_require__(22);var __WEBPACK_IMPORTED_MODULE_5__bullets_electroTowerBullet__=__webpack_require__(23);var __WEBPACK_IMPORTED_MODULE_6__bullets_mortarTowerBullet__=__webpack_require__(24);var __WEBPACK_IMPORTED_MODULE_7__Statics__=__webpack_require__(1);class BasicTower extends __WEBPACK_IMPORTED_MODULE_0__tower__["a"]{constructor(x,y,width,height){super(x,y,width,height);this.color="#995555";this.prize=10;this.useableSelectors=[__WEBPACK_IMPORTED_MODULE_1__enemySelectors__["c"],__WEBPACK_IMPORTED_MODULE_1__enemySelectors__["a"]];this.enemySelector=this.useableSelectors[0]}doAttack(enemy){__WEBPACK_IMPORTED_MODULE_2__game__["default"].entities.push(new __WEBPACK_IMPORTED_MODULE_4__bullets_basicTowerBullet__["a"](this.x+this.width/2,this.y+this.height/2,2,enemy,this.attackPower.getValue()))}}__webpack_exports__["a"]=BasicTower;class ElectroTower extends __WEBPACK_IMPORTED_MODULE_0__tower__["a"]{constructor(x,y,width,height){super(x,y,width,height);this.color="#555599";this.prize=100;this.useableSelectors=[__WEBPACK_IMPORTED_MODULE_1__enemySelectors__["c"],__WEBPACK_IMPORTED_MODULE_1__enemySelectors__["b"],__WEBPACK_IMPORTED_MODULE_1__enemySelectors__["d"]];this.enemySelector=this.useableSelectors[0]}doAttack(enemy){var secsBetweenAttacks=1e3/this.attacksPerSeconds.getValue();secsBetweenAttacks*=.7;var delayMultiplier=secsBetweenAttacks/10;var delays=[1,3,5,7,9];for(let i=0;i<delays.length;i++){const delay=delays[i];__WEBPACK_IMPORTED_MODULE_2__game__["default"].entities.push(new __WEBPACK_IMPORTED_MODULE_5__bullets_electroTowerBullet__["a"](this.x+this.width/2,this.y+this.height/2,enemy,this.attackPower.getValue()/delays.length,delay*delayMultiplier,100))}}}__webpack_exports__["b"]=ElectroTower;class MortarTower extends __WEBPACK_IMPORTED_MODULE_0__tower__["a"]{constructor(x,y,width,height){super(x,y,width,height);this.color="#559955";this.prize=150;this.useableSelectors=[__WEBPACK_IMPORTED_MODULE_1__enemySelectors__["c"],__WEBPACK_IMPORTED_MODULE_1__enemySelectors__["b"],__WEBPACK_IMPORTED_MODULE_1__enemySelectors__["d"]];this.enemySelector=this.useableSelectors[0];this.damageArea=__WEBPACK_IMPORTED_MODULE_7__Statics__["a"].getTowerAttributeFor(this,"damageArea")}doAttack(enemy){var bulletSize=2;__WEBPACK_IMPORTED_MODULE_2__game__["default"].entities.push(new __WEBPACK_IMPORTED_MODULE_6__bullets_mortarTowerBullet__["a"](this.x+this.width/2,this.y+this.height/2,bulletSize,enemy.x,enemy.y,this.attackPower.getValue(),this.damageArea.getValue()))}}__webpack_exports__["c"]=MortarTower},function(module,__webpack_exports__,__webpack_require__){"use strict";var __WEBPACK_IMPORTED_MODULE_0__enemySelectors__=__webpack_require__(5);var __WEBPACK_IMPORTED_MODULE_1__towerAttribute__=__webpack_require__(4);var __WEBPACK_IMPORTED_MODULE_2__game__=__webpack_require__(0);var __WEBPACK_IMPORTED_MODULE_3__Statics__=__webpack_require__(1);__webpack_exports__["a"]=class{constructor(x,y,width,height){this.prize=0;this.x=x;this.y=y;this.width=width;this.height=height;this.margin=3;this.color="red";this.lastAttack=999999;this.attacksPerSeconds=__WEBPACK_IMPORTED_MODULE_3__Statics__["a"].getTowerAttributeFor(this,"attacksPerSecond");this.attackPower=__WEBPACK_IMPORTED_MODULE_3__Statics__["a"].getTowerAttributeFor(this,"attackDamage");this.attackRange=__WEBPACK_IMPORTED_MODULE_3__Statics__["a"].getTowerAttributeFor(this,"attackRange");this.maxHealthPoints=__WEBPACK_IMPORTED_MODULE_3__Statics__["a"].getTowerAttributeFor(this,"healthPoints");this.currentHealthPoints=this.maxHealthPoints.getValue();this.upgradeableAttributes=[this.attackPower,this.attacksPerSeconds,this.attackRange]}draw(ctx){ctx.fillStyle=this.color;ctx.fillRect(this.x+this.margin,this.y+this.margin,this.width-this.margin*2,this.height-this.margin*2);if(this.maxHealthPoints>this.currentHealthPoints){ctx.fillStyle="red";ctx.fillRect(this.x,this.y,this.width,this.height/8);ctx.fillStyle="green";var healthWidth=this.width/this.maxHealthPoints*this.currentHealthPoints;ctx.fillRect(this.x,this.y,healthWidth,this.height/8)}}drawSelection(ctx){ctx.globalAlpha=.1;ctx.fillStyle="#AAAAAA";ctx.beginPath();ctx.arc(this.x+this.width/2,this.y+this.height/2,this.attackRange.getValue(),0,2*Math.PI);ctx.closePath();ctx.fill();ctx.strokeStyle="#333333";ctx.lineWidth=3;ctx.globalAlpha=.4;ctx.stroke();ctx.globalAlpha=1}update(delta){this.attack(delta)}calcDistance(x1,y1,x2,y2){var a=x1-x2;var b=y1-y2;return Math.sqrt(a*a+b*b)}attack(delta){this.lastAttack+=delta;var perSec=1e3/this.attacksPerSeconds.getValue();if(this.lastAttack<perSec){return}var enemy=this.enemySelector.find(this);if(enemy!=null){if(this.calcDistance(enemy.x,enemy.y,this.x,this.y)<this.attackRange.getValue()){this.doAttack(enemy);this.lastAttack=0}}}hit(points){this.currentHealthPoints-=points;if(this.currentHealthPoints<=0){this.currentHealthPoints=0}}}},function(module,__webpack_exports__,__webpack_require__){"use strict";var __WEBPACK_IMPORTED_MODULE_0__Statics__=__webpack_require__(1);var __WEBPACK_IMPORTED_MODULE_1__game__=__webpack_require__(0);__webpack_exports__["a"]=class{constructor(x,y,size,enemy,hitValue){this.x=x;this.y=y;this.size=size;this.enemy=enemy;this.active=true;this.speed=2.5;var tx=this.enemy.x-this.x;var ty=this.enemy.y-this.y;var dist=Math.sqrt(tx*tx+ty*ty);this.velX=tx/dist*this.speed;this.velY=ty/dist*this.speed;this.hitValue=hitValue}update(){if(!this.active){return}this.x+=this.velX;this.y+=this.velY;if(this.outOfGameArea()){this.active=false;return}for(let i=0;i<__WEBPACK_IMPORTED_MODULE_1__game__["default"].enemies.length;i++){const enemy=__WEBPACK_IMPORTED_MODULE_1__game__["default"].enemies[i];var a=enemy.x-this.x;var b=enemy.y-this.y;var dist=Math.sqrt(a*a+b*b);if(dist<=this.size+this.enemy.size){enemy.hit(this.hitValue);this.active=false;break}}}outOfGameArea(){return this.x>__WEBPACK_IMPORTED_MODULE_0__Statics__["a"].tileSize*__WEBPACK_IMPORTED_MODULE_0__Statics__["a"].tilesCountWidth||this.y>__WEBPACK_IMPORTED_MODULE_0__Statics__["a"].tileSize*__WEBPACK_IMPORTED_MODULE_0__Statics__["a"].tilesCountHeight||this.x<0||this.y<0}draw(ctx){ctx.beginPath();ctx.fillStyle="black";ctx.arc(this.x,this.y,this.size,0,2*Math.PI);ctx.closePath();ctx.fill()}isActive(){return this.active}}},function(module,__webpack_exports__,__webpack_require__){"use strict";var __WEBPACK_IMPORTED_MODULE_0__Statics__=__webpack_require__(1);var __WEBPACK_IMPORTED_MODULE_1__game__=__webpack_require__(0);__webpack_exports__["a"]=class{constructor(x,y,enemy,hitValue,delay,afterGlow){this.x=x;this.y=y;this.enemy=enemy;this.active=true;this.hitValue=hitValue;this.delay=delay;this.elapsedTime=0;this.hitTime=null;this.lightningAfterGlowTime=afterGlow;this.lightningPath=null}randomIntFromInterval(min,max){return Math.floor(Math.random()*(max-min+1)+min)}calculateLightningPath(x1,y1,x2,y2){var sectionsCount=this.randomIntFromInterval(3,10);var a=x1-x2;var b=y1-y2;var dist=Math.sqrt(a*a+b*b);var path=[];path.push({x:x1,y:y1});for(let i=1;i<sectionsCount;i++){var percent=i/sectionsCount;var sectionX=x1+(x2-x1)*percent+this.randomIntFromInterval(dist*-.01,dist*.01);var sectionY=y1+(y2-y1)*percent+this.randomIntFromInterval(dist*-.01,dist*.01);path.push({x:sectionX,y:sectionY})}path.push({x:x2,y:y2});return path}update(delta){this.elapsedTime+=delta;if(this.enemy.isDead()&&this.hitTime==null){this.active=false}if(this.hitTime!=null&&this.elapsedTime>this.hitTime+this.lightningAfterGlowTime){this.active=false}if(!this.active){return}if(this.hitTime==null&&this.elapsedTime>this.delay){this.enemy.hit(this.hitValue);this.hitTime=this.elapsedTime;this.lightningPath=this.calculateLightningPath(this.x,this.y,this.enemy.x,this.enemy.y)}}draw(ctx){if(this.hitTime!=null&&this.lightningPath!=null&&this.lightningPath.length>0){ctx.beginPath();ctx.strokeStyle="lightblue";ctx.lineWidth=1;ctx.beginPath();for(let i=0;i<this.lightningPath.length;i++){const segment=this.lightningPath[i];ctx.lineTo(segment.x,segment.y)}ctx.stroke()}}isActive(){return this.active}}},function(module,__webpack_exports__,__webpack_require__){"use strict";var __WEBPACK_IMPORTED_MODULE_0__Statics__=__webpack_require__(1);var __WEBPACK_IMPORTED_MODULE_1__game__=__webpack_require__(0);var __WEBPACK_IMPORTED_MODULE_2__mortarExplosionEffect__=__webpack_require__(25);__webpack_exports__["a"]=class{constructor(x,y,size,targetX,targetY,hitValue,damageArea){this.x=x;this.y=y;this.size=size;this.targetX=targetX;this.targetY=targetY;this.active=true;this.speed=1;this.hitValue=hitValue;this.damageArea=damageArea}update(){if(!this.active){return}if(this.outOfGameArea()){this.active=false;return}var tx=this.targetX-this.x;var ty=this.targetY-this.y;var dist=Math.sqrt(tx*tx+ty*ty);this.velX=tx/dist*this.speed;this.velY=ty/dist*this.speed;this.x+=this.velX;this.y+=this.velY;if(dist<1){this.active=false;__WEBPACK_IMPORTED_MODULE_1__game__["default"].entities.push(new __WEBPACK_IMPORTED_MODULE_2__mortarExplosionEffect__["a"](this.x,this.y,this.damageArea));for(let i=0;i<__WEBPACK_IMPORTED_MODULE_1__game__["default"].enemies.length;i++){const enemy=__WEBPACK_IMPORTED_MODULE_1__game__["default"].enemies[i];var a=enemy.x-this.x;var b=enemy.y-this.y;var dist=Math.sqrt(a*a+b*b);if(dist<=this.damageArea){enemy.hit(this.hitValue/this.damageArea*dist)}}}}outOfGameArea(){return this.x>__WEBPACK_IMPORTED_MODULE_0__Statics__["a"].tileSize*__WEBPACK_IMPORTED_MODULE_0__Statics__["a"].tilesCountWidth||this.y>__WEBPACK_IMPORTED_MODULE_0__Statics__["a"].tileSize*__WEBPACK_IMPORTED_MODULE_0__Statics__["a"].tilesCountHeight||this.x<0||this.y<0}draw(ctx){ctx.beginPath();ctx.fillStyle="black";ctx.arc(this.x,this.y,this.size,0,2*Math.PI);ctx.closePath();ctx.fill()}isActive(){return this.active}}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_exports__["a"]=class{constructor(x,y,size){this.x=x;this.y=y;this.size=size;this.effectTime=600;this.elapsedTime=0;this.active=true}update(delta){this.elapsedTime+=delta;if(this.elapsedTime>this.effectTime){this.active=false}}draw(ctx){ctx.beginPath();ctx.fillStyle="red";ctx.globalAlpha=.1;var size=Math.min(this.effectTime/3,this.elapsedTime)/(this.effectTime/3)*this.size;ctx.arc(this.x,this.y,size,0,2*Math.PI);ctx.closePath();ctx.fill();ctx.globalAlpha=1}isActive(){return this.active}}},function(module,__webpack_exports__,__webpack_require__){"use strict";var __WEBPACK_IMPORTED_MODULE_0__Tile__=__webpack_require__(10);var __WEBPACK_IMPORTED_MODULE_1__game__=__webpack_require__(0);var __WEBPACK_IMPORTED_MODULE_2__Statics__=__webpack_require__(1);__webpack_exports__["a"]=class extends __WEBPACK_IMPORTED_MODULE_0__Tile__["a"]{constructor(x,y,width,height){super(x,y,width,height);this.color="#000000";this.coordsX=this.x/__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].tileSize;this.coordsY=this.y/__WEBPACK_IMPORTED_MODULE_2__Statics__["a"].tileSize;this.currentHealth=1e3;this.maxHealth=this.currentHealth}isDead(){return this.currentHealth<=0}isWalkable(){return false}draw(ctx){super.draw(ctx);ctx.fillStyle=this.color;ctx.fillRect(this.x,this.y,this.width,this.height);ctx.fillStyle="#CCCCCC";for(var cx=this.x;cx<this.x+this.width;cx+=4){for(var cy=this.y;cy<this.y+this.height;cy+=4){if((cx+cy)%8==4){ctx.fillRect(cx,cy,4,4)}}}}hit(points){this.currentHealth-=points;if(this.currentHealth<=0){this.currentHealth=0}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,